docker compose up -d
# start all containers in .yaml file together under the same network in detached mode

docker ps

# going to localhost:80 or <server's ip>:80 in our browser we can see 
# the pdadmin interface. we can login with the username (user@domain.com) 
# and password (SuperSecret) we set up for pgadmin environment variables in the .yaml file.
# now, to connect to the postgres database we need to fill in the following details
#   host name/address: postgres-db (postgres container name defined in .yaml)
#   port: 5432
#   username: postgres (defined in .yaml)
#   password: docker   (defined in .yaml)
#
# we can now try and create a new table in the database with and without a volume
# to see if it will be preserved after we stop the postgres container. we could do that
# using the pgadmin graphical interface or psql and the command line

docker exec -it postgres-db bash
# get inside the postgres container and open a bash UNIX shell

psql -h localhost -p 5432 -U postgres
# connect with the postgres database providing the host ip (-p local/server ip),
# the exposed port (-p) and the username (-U). also the password 'docker'will be asked.
# once we are connected we can write sql queries

CREATE TABLE authors (
   AUTHOR_ID INT PRIMARY KEY     NOT NULL,
   AUTHOR_NAME           TEXT    NOT NULL,
   AUTHOR_AGE            INT     NOT NULL,
   AUTHOR_LEVEL        INT     NOT NULL
);

# we notice that when we use a volume and stop and restart the containers, the 
# table is still there, preserved, while without a volume it is lost every time 
# we shut down the containers.